一、什么是webpack,为什么要学习和使用它？
  现在很多的网页页面，其实可以看作是拥有丰富功能的应用，他们拥有大量的JavaScript代码和一大堆的依赖包，为了改善这种异常复杂的开发工作，前端工程师提出了很多的解决方案：
  1、模块化：将零碎的代码进行封装，细化为结构、职能明确的小文件；
  2、类似于Typescript这种在JavaScript基础上拓展的开发语言：解决当前版本的JavaScript所不能解决的一些问题，而且还可以换装JavaScript文件，使得浏览器可以 识别；
  3、less、scss等css预处理器；
  ...
  这些工具的确简化了我们的开发难度，但是这些工具还需要进行额外的处理，这就为Webpack工具的出现提供了需求。

二、什么是webpack:
  WebPack可以看做是模块打包机：它做的事情是，分析你的项目结构，找到JavaScript模块以及其它的一些浏览器不能直接运行的拓展语言（Scss，TypeScript等），并将其打包为合适的格式以供浏览器使用。

三、WebPack和Grunt以及Gulp相比有什么特性
  1、其实Webpack和另外两个并没有太多的可比性，Gulp/Grunt是一种能够优化前端的开发流程的工具，而WebPack是一种模块化的解决方案，不过Webpack的优点使得Webpack可以替代Gulp/Grunt类的工具。
  2、Grunt和Gulp的工作方式是：在一个配置文件中，指明对某些文件进行类似编译，组合，压缩等任务的具体步骤，这个工具之后可以自动替你完成这些任务。
  3、Webpack的工作方式是：把你的项目当做一个整体，通过一个给定的主文件（如：index.js），Webpack将从这个文件开始找到你的项目的所有依赖文件，使用loaders处理它们，最后打包为一个浏览器可识别的JavaScript文件。
  
四、webpack的使用：
  1、安装
  在npm下进行安装，新建一个文件夹，在终端下转到你文件夹所在的位置：
  //全局安装
  npm install -g webpack
  //安装到你的项目目录
  npm install --save-dev webpack
  2、正式使用webpack
    2.1、webpack可以在终端中使用，其最基本的命令是：
    webpack {entry file/入口文件} {destination for bundled file/存放bundle.js的地方}
    2.2、全局安装的情况下：
    webpack app/main.js public/bundle.js
         非全局安装情况下：
    node_modules/.bin/webpack app/main.js public/bundle.js

五、webpack的另一种用法：通过配置文件来使用WebPack
  1、Webpack拥有很多其它的比较高级的功能（比如说本文后面会介绍的loaders和plugins），这些功能其实都可以通过命令行模式实现，但是正如已经提到的，这样不太方便且容易出错的，一个更好的办法是定义一个配置文件，这个配置文件其实也是一个简单的JavaScript模块，可以把所有的与构建相关的信息放在里面。

